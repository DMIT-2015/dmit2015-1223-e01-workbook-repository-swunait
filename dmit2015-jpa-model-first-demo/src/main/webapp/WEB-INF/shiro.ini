# =======================
# Shiro INI configuration
# https://shiro.apache.org/configuration.html
# =======================

# -----------------------------------------------------------------------------
# The 'main' section contains Objects and their properties are defined here,
# Such as the securityManager, Realms and anything
# else needed to build the SecurityManager
# -----------------------------------------------------------------------------
[main]
## Must assign loginUrl to both authc and user
authc.loginUrl = /shiroLogin.xhtml
user.loginUrl = /shiroLogin.xhtml
#authc.useRemembered = true
#authc.loginFailedWaitTime = 3

# configure Shiro's default 'ssl' filter to enabled HSTS:
ssl.enabled = true
ssl.hsts.enabled = true
ssl.hsts.includeSubDomains = true

activeDirectoryRealm = org.apache.shiro.realm.activedirectory.ActiveDirectoryRealm
activeDirectoryRealm.url = ldap://192.168.101.253:389
activeDirectoryRealm.searchBase = OU=Departments,DC=dmit2015,DC=ca
activeDirectoryRealm.systemUsername = DAUSTIN@dmit2015.ca
activeDirectoryRealm.systemPassword = Password2015
# activeDirectoryRealm.authorizationCachingEnabled = true
activeDirectoryRealm.groupRolesMap = "CN=Sales,OU=Sales,DC=dmit2015,DC=ca":"Sales","CN=IT,OU=IT,DC=dmit2015,DC=ca":"IT"

# jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
# Configure JDBC realm datasource.
# dataSource = oracle.jdbc.pool.OracleDataSource
# dataSource.URL = jdbc:oracle:thin:@localhost:1521/FREEPDB1
# dataSource.user = dbUsername
# dataSource.password = dbPassword
# jdbcRealm.dataSource = $dataSource
#jdbcRealm.authenticationQuery = SELECT password FROM CallerUser WHERE username = ?
#jdbcRealm.userRolesQuery = SELECT groupname FROM CallerGroup WHERE username = ?
#credentialsMatcher = org.apache.shiro.authc.credential.PasswordMatcher
#jdbcRealm.credentialsMatcher = $credentialsMatcher

securityManager.realms = $activeDirectoryRealm

# -----------------------------------------------------------------------------
# The 'users' section is for simple deployments
# when you only need a small number of statically-defined
# set of User accounts.
#
# Users and their (optional) assigned roles
# username = password, role1, role2, ..., roleN
# -----------------------------------------------------------------------------
[users]

# -----------------------------------------------------------------------------
# The 'roles' section is for simple deployments
# when you only need a small number of statically-defined
# roles.
#
# Roles with assigned permissions
# roleName = perm1, perm2, ..., permN
# -----------------------------------------------------------------------------
[roles]


# -----------------------------------------------------------------------------
# https://shiro.apache.org/web.html
# The 'urls' section is used for url-based security in web applications.
# _URL_Ant_Path_Expression_ = _Path_Specific_Filter_Chain_
#
# /index.html = anon
# /user/** = authc
# /admin/** = athc, roles[role1,roles2]
# /restapi/** = authc, rest
# /remoting/rpc/** = authc, perms["remote:invoke"]
#
# -----------------------------------------------------------------------------
[urls]
/shiroLogin.xhtml = authc
/shiro/movies/create.xhtml = authc, roles[Sales]
/shiro/movies/edit.xhtml = authc, roles[Sales]
/shiro/movies/delete.xhtml = authc, roles[Sales]
